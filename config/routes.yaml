#app_index:
#    path: /
#    controller: App\Controller\IndexController::index

index:
    path: /api/v7/
    controller: App\Controller\IndexController::index

# ------------------ login  -------------------------

login:
  path: /api/v7/login
  controller: App\Controller\LoginController::login

# ------------------ param  -------------------------

allParams:
  path: /api/v7/params
  controller: App\Controller\ParamController::getAllParams

paramByName:
  path: /api/v7/params/0/{name}
  controller: App\Controller\ParamController::getParamByName

# ------------------ contacts  ----------------------
allContacts:
  path: /api/v7/contacts
  controller: App\Controller\ContactController::getAllContacts

# -------------------- files  -----------------------
allFiles:
  path: /api/v7/files
  controller: App\Controller\FileController::getAllFiles

oneFile:
  path: /api/v7/files/{id}
  controller: App\Controller\FileController::getOneFile
  methods: [GET, POST]
  requirements:
    id: '\d+'

delOneFileById:
  path: /api/v7/files/{id}
  controller: App\Controller\FileController::delOneFileById
  methods: [DELETE]
  requirements:
    id: '\d+'

delOneFileByIdAndType:
  path: /api/v7/files/{id}/{type}
  controller: App\Controller\FileController::delOneFileByIdAndType
  methods: [DELETE]
  requirements:
    id: '\d+'
    type: "[a-zA-Z]+"

# -------------------- schools  -----------------------

allSchools:
  path: /api/v7/schools
  controller: App\Controller\SchoolController::getAllSchools
  methods: [GET]

oneSchool:
  path: /api/v7/schools/{id}
  controller: App\Controller\SchoolController::getOneSchool
  methods: [GET]
  requirements:
    id: '\d+'

# -------------------- teachers  -----------------------

teacherGetAll:
  path: /api/v7/teachers
  controller: App\Controller\TeacherController::teacherGetAll
  methods: [GET]


teacherGetById:
  path: /api/v7/teachers/{id}
  controller: App\Controller\TeacherController::teacherGetAll
  methods: [GET]
  requirements:
    id: '\d+'

teachersPut:
  path: /api/v7/teachers/{id}/{type}/{value}
  controller: App\Controller\TeacherController::teachersPut
  methods: [PUT]
  requirements:
    id: '\d+'

teachersDelete:
  path: /api/v7/teachers/{id}
  controller: App\Controller\TeacherController::teachersDelete
  methods: [DELETE]
  requirements:
    id: '\d+'

# --------------------- students  ----------------------

studentGet:
  path: /api/v7/students
  controller: App\Controller\StudentController::studentGet
  methods: [GET]

studentGetById:
  path: /api/v7/students/{id}
  controller: App\Controller\StudentController::studentGetById
  methods: [GET]
  requirements:
    id: '\d+'

studentPut:
  path: /api/v7/students/{id}/{type}/{value}
  controller: App\Controller\StudentController::studentPut
  methods: [PUT]
  requirements:
    id: '\d+'

studentDelete:
  path: /api/v7/students/{id}
  controller: App\Controller\StudentController::studentDelete
  methods: [DELETE]
  requirements:
    id: '\d+'

# --------------------- entries  ----------------------

entryGet:
  path: /api/v7/entries
  controller: App\Controller\EntryController::entryGet
  methods: [GET]

duetGet:
  path: /api/v7/duets
  controller: App\Controller\EntryController::duetGet
  methods: [GET]

groupGet:
  path: /api/v7/groups
  controller: App\Controller\EntryController::groupGet
  methods: [GET]

individualGet:
  path: /api/v7/individuals
  controller: App\Controller\EntryController::individualGet
  methods: [GET]

entryGetById:
  path: /api/v7/entries/{id}/{nature}
  controller: App\Controller\EntryController::entryGetById
  methods: [GET]
  requirements:
    id: '\d+'
    nature: "[a-zA-Z]+"

individualGetById:
  path: /api/v7/individuals/{id}
  controller: App\Controller\EntryController::individualGetById
  methods: [GET]
  requirements:
    id: '\d+'

duetGetById:
  path: /api/v7/duets/{id}
  controller: App\Controller\EntryController::duetGetById
  methods: [GET]
  requirements:
    id: '\d+'

groupGetById:
  path: /api/v7/groups/{id}
  controller: App\Controller\EntryController::groupGetById
  methods: [GET]
  requirements:
    id: '\d+'

entryPut:
  path: api/v7/entries/{id}/{nature}/{type}/{value}
  controller: App\Controller\EntryController::entryPut
  methods: [PUT]
  requirements:
    id: '\d+'
    nature: "[a-zA-Z]+"
    type: "[a-zA-Z]+"

individualPut:
  path: api/v7/individuals/{id}/{type}/{value}
  controller: App\Controller\EntryController::individualPut
  methods: [PUT]
  requirements:
    id: '\d+'
    type: "[a-zA-Z]+"

duetPut:
  path: api/v7/duets/{id}/{type}/{value}
  controller: App\Controller\EntryController::duetPut
  methods: [PUT]
  requirements:
    id: '\d+'
    type: "[a-zA-Z]+"

groupPut:
  path: api/v7/groups/{id}/{type}/{value}
  controller: App\Controller\EntryController::groupPut
  methods: [PUT]
  requirements:
    id: '\d+'
    type: "[a-zA-Z]+"

entryDelete:
  path: api/v7/entries/{id}/{nature}
  controller: App\Controller\EntryController::entryDelete
  methods: [DELETE]
  requirements:
    id: '\d+'
    nature: "[a-zA-Z]+"

individualDelete:
  path: api/v7/individuals/{id}
  controller: App\Controller\EntryController::individualDelete
  methods: [DELETE]
  requirements:
    id: '\d+'

duetDelete:
  path: api/v7/duets/{id}
  controller: App\Controller\EntryController::duetDelete
  methods: [DELETE]
  requirements:
    id: '\d+'

groupDelete:
  path: api/v7/groups/{id}
  controller: App\Controller\EntryController::groupDelete
  methods: [DELETE]
  requirements:
    id: '\d+'

# -------------------- download  --------------------

downloadGet:
  path: api/v7/download/{id}
  controller: App\Controller\DownloadController::downloadGet
  methods: [GET]
  requirements:
    id: '\d+'

# ------------------ FollowUpTool  --------------------

followUpTool:
  path: api/v7/followUpToolVersion
  controller: App\Controller\FollowUpToolController::followUpTool
  methods: [GET]

# -------------------- dashboard  --------------------

dashboard:
  path: api/v7/dashboard
  controller: App\Controller\DashboardController::dashboard
  methods: [GET]

# ------------------ documentation  --------------------

# symfony 5.4.20, version mini pour cette annotation: 5.3
when@dev:
  docu:
    path: /api/v7/documentation/
    controller: App\Controller\DocController::index
    methods: [GET]
    #condition: "%kernel.environment% === 'dev'"

# ---------------------- other  ------------------------

peut_servir:
    path: /legacy/doc
    controller: Symfony\Bundle\FrameworkBundle\Controller\RedirectController
    defaults:
        # this value can be an absolute path or an absolute URL
        path: 'https://legacy.example.com/doc'
        permanent: true

